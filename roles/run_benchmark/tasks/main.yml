---
- name: Reboot AWS instances
  local_action:
    module: ec2
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: eu-west-1
    wait: yes
    instance_tags:
        Name: node
    state: restarted

- name: With AWS instances started
  local_action:
    module: ec2
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: eu-west-1
    wait: yes
    instance_tags:
        Name: node
    state: running

- name: sleep for 60 seconds and continue with play
  wait_for:
    timeout: 60

- name: Start Riak
  shell: riak start
  become: yes
  remote_user: ubuntu
  delegate_to: "{{facts_item}}"
  delegate_facts: True
  loop: "{{groups['nodes']}}"
  loop_control:
    loop_var: facts_item

# - name: "Load {{description}} write_consistency={{write_consistency}}, read_consistency={{read_consistency}}"
#   shell: "chdir=~/ycsb ./bin/ycsb load {{db}} -p hosts={{load_balancer_ip_address}} -p threadcount={{threads}} -p objectversionlimit={{version_num}} -p numobjects={{objects_num}} -p cassandra.readconsistencylevel={{read_consistency}} -p cassandra.writeconsistencylevel={{write_consistency}} -P workloads/myworkload -s > ~/load.log"

# - name: "Run {{description}} write_consistency={{write_consistency}}, read_consistency={{read_consistency}}"
#   shell: "chdir=~/ycsb ./bin/ycsb run {{db}} -p hosts={{load_balancer_ip_address}} -p threadcount={{threads}} -p objectversionlimit={{version_num}} -p numobjects={{objects_num}} -p cassandra.readconsistencylevel={{read_consistency}} -p cassandra.writeconsistencylevel={{write_consistency}} -P workloads/myworkload -s > ~/reports/ycsb/{{ansible_date_time.epoch}}_{{description}}_w{{write_consistency}}_r{{read_consistency}}.dat"

- name: "Load {{description}} write_consistency={{write_consistency}}, read_consistency={{read_consistency}}"
  shell: "chdir=~/ycsb ./bin/ycsb load {{db}} -p riak.hosts={{load_balancer_ip_address}} -p riak.bucket_type=workload -p threadcount={{threads}} -p objectversionlimit={{version_num}} -p numobjects={{objects_num}} -p riak.r_val={{read_consistency}} -p riak.w_val={{write_consistency}} -p riak.strong_consistency=false -p riak.debug=true -P workloads/myworkload -s > ~/load.log"
  when: description == 'riak'
- name: "Run {{description}} write_consistency={{write_consistency}}, read_consistency={{read_consistency}}"
  shell: "chdir=~/ycsb ./bin/ycsb run {{db}} -p riak.hosts={{load_balancer_ip_address}} -p riak.bucket_type=workload -p threadcount={{threads}} -p objectversionlimit={{version_num}} -p numobjects={{objects_num}} -p riak.r_val={{read_consistency}} -p riak.w_val={{write_consistency}} -p riak.strong_consistency=false -P workloads/myworkload -s > ~/reports/ycsb/{{ansible_date_time.epoch}}_{{description}}_w{{write_consistency}}_r{{read_consistency}}.dat"
  when: description == 'riak'

